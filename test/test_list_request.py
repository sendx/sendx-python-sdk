# coding: utf-8

"""
    SendX REST API

    # Introduction The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sendx_python_sdk.models.list_request import ListRequest

class TestListRequest(unittest.TestCase):
    """ListRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListRequest:
        """Test ListRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListRequest`
        """
        model = ListRequest()
        if include_optional:
            return ListRequest(
                name = 'Newsletter Subscribers',
                type = 0,
                send_thank_you_mail = True,
                thank_you_from_name = 'John Doe',
                thank_you_from_email = 'john.doe@example.com',
                thank_you_mail_subject = 'Thank You for Subscribing!',
                thank_you_mail_message = 'We appreciate your subscription!',
                thank_you_sender = 'sender_101',
                confirm_from_name = 'John Doe',
                confirm_from_email = 'john.doe@example.com',
                confirm_mail_subject = 'Please Confirm Your Subscription',
                confirm_mail_message = 'Click the link below to confirm your subscription.',
                confirm_success_page = 'https://example.com/confirmation-success',
                confirm_sender = 'sender_102'
            )
        else:
            return ListRequest(
        )
        """

    def testListRequest(self):
        """Test ListRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
