# coding: utf-8

"""
    SendX REST API

    # Introduction The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from sendx_python_sdk.models.contact import Contact

class TestContact(unittest.TestCase):
    """Contact unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Contact:
        """Test Contact
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Contact`
        """
        model = Contact()
        if include_optional:
            return Contact(
                id = 'a1b2c3d4e5',
                first_name = 'Jane',
                last_name = 'Doe',
                email = 'jane.doe@example.com',
                company = 'Tech Solutions Inc.',
                custom_fields = {"1":"VIP","2":"Special Offer Subscriber"},
                unsubscribed = False,
                bounced = False,
                spam = False,
                created = '2024-10-08T09:30Z',
                updated = '2024-10-08T12:45Z',
                blocked = False,
                dropped = False,
                ltv = 5000,
                contact_source = 8,
                last_tracked_ip = '192.168.0.1'
            )
        else:
            return Contact(
        )
        """

    def testContact(self):
        """Test Contact"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
